Know the concepts
    01. 
        The program counter fetches the address of the next instruction.
        Decoder decodes the instruction, gathers resources and executes it.
    02.
        Register is a memory location that is available on CPU itself, as opposed 
        to memory.
        Computation would be much slower, in regards to execution speed.
        We would need to use memory to store all information, which would 
        cause more typing and more memory addresses that programmer would 
        need to remember.
    03.
        By using more bytes to represent it.
    04.
        4 bytes or 32 bits.
    05.
        Each instruction has a predefined opcode.
        If decoder fetches a value that matches one of the opcodes, it executes it.
    06. 
        Addressing modes are ways which we use to move data around.
    07.
        Points to the address of the next instruction that will be executed.

Use the concepts
    01.
        Employee record:
            First name: 30 bytes
            Last name:  30 bytes, start+30 bytes
            Email       30 bytes, start+60 bytes
    02.
        Direct addressing mode.
    03.
        Address 3142.
    04.
        Address 6532.
    05.
        Address 123472.
    06.
        Address 9123498

Going further
    01.
        Two. Immediate mode and direct addressing mode.
    02.
        To make it easier for a programmer to write programs.
    03.
        Pipelinening splits the fetch-execute cycle into separate steps,
        which are executed concurrently by different processor units.
        It is similar to multithreading (at conceptual level, at least)
        but different parts of one function are executed simultaneously,
        compared to multiple functions when multithreading.
    04.
        Advantage of fixed-length instructions is that you know where the next instruction begins.
        Advantage of variable-length instructions is that you don't use more bytes than you need to for an instruction or that you can embedded more smaller instructions into one bigger one.